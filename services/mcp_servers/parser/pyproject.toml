[tool.poetry]
name = "mavik-parser-mcp-server"
version = "1.0.0"
description = "Document parsing MCP server using AWS Textract"
authors = ["Mavik AI <dev@mavik.ai>"]
packages = [{include = "parser_server", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
websockets = "^12.0"
pydantic = "^2.5.0"
aiofiles = "^23.2.1"
pillow = "^10.1.0"
pypdf2 = "^3.0.1"
python-multipart = "^0.0.6"
httpx = "^0.28.0"
mcp = "^1.0.0"

# Shared packages
mavik-common = {path = "../../../packages/common", develop = true}
mavik-aws-clients = {path = "../../../packages/aws_clients", develop = true}
mavik-config = {path = "../../../packages/config", develop = true}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
black = "^23.11.0"

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"] # Allow assert statements in tests

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = [
    "--cov=src/parser_server",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--strict-markers",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"